 @Override
    public AbilityData requestAbilityToPokeApi(int num) {

        AbilityData resultado = new AbilityData();

        /*Esta función contiene excepciónes verificadas y por eso estás obligado a ensuciarlo con un try-catch */
        try {

            // Realiza la petición a pokeapi
            URL url = new URI("https://pokeapi.co/api/v2/ability/" + num).toURL();
            HttpURLConnection solicitud = (HttpURLConnection) url.openConnection();
            solicitud.setRequestMethod("GET");

            // Si la solicitud funciona, comienza el código 
            if (solicitud.getResponseCode() == 200) {
                
                
                /* Se recibe el stream con los bytes del Json, luego objectMapper convierte el string a un jsonnode
                para su uso y jsonNode es el "objeto" json del que extraes datos*/
                String resultadoPeticion = new String(url.openStream().readAllBytes());
                ObjectMapper objectMapper = new ObjectMapper();
                JsonNode jsonSource = objectMapper.readTree(resultadoPeticion);

                // Extrae el atributo "name" del json y lo almacena en la nueva entidad
                resultado.setName(jsonSource.get("name").asText());

                /* effect_entries es un valor que contiene el efecto de la habilidad bien descrito (con su efecto
                competitivo). El problema es que no esta presente en todos los json de las habilidades, por lo que 
                tienes que evaluar si ese campo existe, y si no existe, tienes que seleccionar la descripción de 
                "flavor_text_entries" */

                /* Ambos campos estan presentes en varios idiomas, 
                por eso se comprueba que "language" equivalga a "en" */

                if (!jsonSource.get("effect_entries").isEmpty()) {
                    for(JsonNode effect_entry: jsonSource.get("effect_entries")) {
                        if(effect_entry.get("language").get("name").asText().equals("en"))
                            resultado.setDescription(effect_entry.get("short_effect").asText());
                    }
                }

                else {
                    for (JsonNode flavor_entry : jsonSource.get("flavor_text_entries")) {
                        if (flavor_entry.get("language").get("name").asText().equals("en")) {
                            resultado.setDescription(flavor_entry.get("flavor_text").asText());
                            //Algunas veces devuelve varias veces la misma respuesta, así que detengo el bucle
                            break;
                        }
                    }
                }
                
                return resultado;
            }

        } catch (URISyntaxException | IOException e) {
            e.printStackTrace();
        }
        return null;
    }